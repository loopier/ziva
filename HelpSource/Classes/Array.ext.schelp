INSTANCEMETHODS::

subsection:: Extensions by Å½iva

This extension provides syntax sugar for creating patterns from arrays. The original pattern name has been kept with a leading lower-case instead of upper-case. They return the link::Classes/Pattern:: that they create. For example:

code::
[0,2,4].pseq;
// will return
Pseq([0,2,4], inf);
::

method::ziva
create a Ppar with this list, and start playing it quantized as Pdef.
argument::key
symbol of the Pdef
argument::quant
quantization
code::
Ziva.boot;
a = Pbind(\instrument, \acid);
[ a ].ziva;
::
returns::link::Classes/Pdef::

method::chooseN
create a list of random elements chosen from this one. My be repeated.
argument::size
size of the new list
code::
(..10).chooseN(10);
//-> [ 9, 7, 7, 1, 3, 0, 9, 10, 9, 10 ]
::

method::sextine
create and concatenate variations of this list following the sestina form (link::https://en.wikipedia.org/wiki/Sestina::).
returns::link::Classes/Array::
code::
(1..6).sextine.collect(_.postln)
//[ 1, 2, 3, 4, 5, 6 ]
//[ 6, 1, 5, 2, 4, 3 ]
//[ 3, 6, 4, 1, 2, 5 ]
//[ 5, 3, 2, 6, 1, 4 ]
//[ 4, 5, 1, 3, 6, 2 ]
//[ 2, 4, 6, 5, 3, 1 ]
//[ 1, 2, 3, 4, 5, 6 ]
//-> [ [ 1, 2, 3, 4, 5, 6 ], [ 6, 1, 5, 2, 4, 3 ], [ 3, 6, 4, 1, 2, 5 ], [ 5, 3, 2, 6, 1, 4 ], [ 4, 5, 1, 3, 6, 2 ], [ 2, 4, 6, 5, 3, 1 ], [ 1, 2, 3, 4, 5, 6 ] ]
::

method::pdef
create a link::Classes/Ppar:: with this list and put in a link::Classes/Pdef::.
argument::key
symbol of the link::Classes/Pdef::
returns::link::Classes/Pdef::
code::
Ziva.boot;
a = Pbind(\instrument, \acid);
(
[
    a.fast.pingpong,
    a.oct(3),
].pseq(\a).play.quant_(1);
)
::

method::pseq
method::pindex
method::pser
method::pshuf
method::prand
method::pxrand
method::pwrand
method::pfsm
method::pdfsm
method::pswitch
method::pswitch1
method::ptuple
method::place
method::ppatlace
method::pslide
method::pwalk
method::ppar
method::ptpar
method::pline
