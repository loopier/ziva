TITLE:: Ziva
summary:: Live coding with patterns made easy.
categories:: Live Coding
related:: Guides/Ziva_Getting_Started_Guide, Classes/Pattern, Classes/Array, Classes/String

DESCRIPTION::
This class provides a set of tools to quickly setup a live coding environment and interact with it.

CLASSMETHODS::

METHOD:: boot
Boot the server with optional ServerOptions. Defaults should work O.K., they are already tweaked allocating more resources than SuperCollider's defaults.

ARGUMENT:: inputChannels
number of input channels

ARGUMENT:: outputChannels
number of output channels

ARGUMENT:: server
server to be used

ARGUMENT:: numBuffers
multiplier of the default numBuffers (see ServerOptions).

ARGUMENT:: memSize
multiplier of the default memSize (see ServerOptions).

ARGUMENT:: maxNodes
multiplier of the default maxNodes (see ServerOptions).

ARGUMENT:: samplesPath
path to the samples parent directory (see .loadSamples)

METHOD:: start
Same as .boot, with fewer options.



METHOD:: serverOptions
Set the ServerOptions for the server (can also be set with .boot)

ARGUMENT:: server
server to be used

ARGUMENT:: inputChannels
number of input channels

ARGUMENT:: outputChannels
number of output channels

ARGUMENT:: numBuffers
multiplier of the default numBuffers (see ServerOptions).

ARGUMENT:: memSize
multiplier of the default memSize (see ServerOptions).

ARGUMENT:: maxNodes
multiplier of the default maxNodes (see ServerOptions).

METHOD:: effectDict
get/set the dictionary of available effects.

METHOD:: sounds
Post the list of sample names being loaded into the server, with the number of audio files between ().

METHOD:: controls
Post the SynthDef's arguments with their current value.

ARGUMENT:: synth
symbol of the SynthDef to be consulted.

code::
Ziva.controls(\acid);

// Post Window output
//
// acid controls
// [ out, 0.0 ]
// [ sustain, 1.0 ]
// [ pan, 0.0 ]
// [ accelerate, 0.0 ]
// [ freq, 440.0 ]
// [ amp, 1.0 ]
// [ gate, 1.0 ]
// [ cutoff, 440.0 ]
// [ resonance, 0.30000001192093 ]
// -> Ziva
::
METHOD:: track
Set track effects.

ARGUMENT:: track
track number.

ARGUMENT::  ... effects
any number of symbols (none for dry signal) of the desired effects for the track.  Order matters.

code::
Ziva.boot;
a = Pbind(\legato, 0.1);
Pdef(\a, a >> 0).play

Ziva.track(0, \delay);
Ziva.track(0, \delay, \reverb);
Ziva.track(0, \reverb, \delay);
Ziva.track(0);
::


METHOD:: scope
Open a Scope window with 2 channels and X/Y format.

ARGUMENT:: alwaysOnTop
true to keep window above others at all times.

METHOD:: synths
Post list of synth names currently loaded on the server.

METHOD:: pdef
Create a Pdef with a Ppar in it and start playing it immediately.

ARGUMENT:: key
key of the Pdef.

ARGUMENT:: quant
quantization of the Pdef player.

ARGUMENT::  ... elements
list of patterns or streams that will be passed to the Ppar.

code::
Ziva.pdef(\bla, Pbind(), Pbind(\octave, 3));
// is equivalent to
Pdef(\bla, Ppar([ Pbind(), Pbind(\octave, 3) ])).play.quant_(1);
::

METHOD:: lfo
create an LFO to be plugged to a parameter of any instrument.
ARGUMENT:: index
a number. Reusing the number will override previously used ones.
ARGUMENT:: wave
shape of the LFO oscillator wave: \sine, \saw, \pulse, \tri, \noise0 (square), \noise1 (linear interpolation), \noise2 (exponential interpolation).
ARGUMENT:: freq
frequency of the LFO.
ARGUMENT:: min
minimum value of the LFO output.
ARGUMENT:: max
maximum value of the LFO output.
returns:: link::Classes/Ndef::

METHOD:: fx
post list of available effects.

METHOD:: loadSamples
Load sample directories.

ARGUMENT:: path
path to the parent directory containing subdirectories with audiofiles.

ARGUMENT:: server
server on which to allocate the buffers (samples).

code::
Ziva.loadSamples(Platform.userAppSupportDir ++ "/downloaded-quarks/Dirt-Samples");
::


METHOD:: stop
Stop all sounds (all Pdefs).

METHOD:: clear
Clear all running Pdefs.



INSTANCEMETHODS::


EXAMPLES::

code::
(some example code)
::
